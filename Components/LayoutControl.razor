@using LayoutDesigner.Models
@using LayoutDesigner.Pages
@implements IDisposable

	@if (LayoutControlData != null)
	{
		<CascadingValue Value="LayoutControlData">
			<Selectable HideSelection="@(LayoutControlData != null ? !LayoutControlData.Selectable : true)">
				<DynamicComponent Type="LayoutControlData.Type" Parameters="LayoutControlData.Parameters" @ref="_dynamicComponent" />
			</Selectable>
		</CascadingValue>
}

@code {

	[Parameter] public LayoutControlData? LayoutControlData { get; set; }

	[CascadingParameter]
	public Container? Container { get; set; }

	private DynamicComponent? _dynamicComponent;
	private bool _containerEventsRegistered = false;

	public LayoutComponent? GetLayoutComponent()
	{
		return (LayoutComponent?)_dynamicComponent?.Instance;
	}

	protected override void OnParametersSet()
	{
		if (Container != null && !_containerEventsRegistered)
		{
			Container.StateChanged += OnStateChanged;
			_containerEventsRegistered = true;
		}
	}

	void IDisposable.Dispose()
	{
		if (Container != null)
			Container.StateChanged -= OnStateChanged;
	}

	private void OnStateChanged(LayoutControlData data)
	{
		if (data == LayoutControlData)
			StateHasChanged();
	}
}
