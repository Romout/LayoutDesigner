@using LayoutDesigner.Components
@using LayoutDesigner.Interfaces
@using LayoutDesigner.Models
<div class="container">
	<CascadingValue Value="this">
		@ChildContent
	</CascadingValue>
</div>

@code {
	[Parameter]
	public RenderFragment? ChildContent { get; set; }

	public LayoutControlData? Payload { get; set; }

	public LayoutControlData Root { get; set; }

	public LayoutControlData? Selection { get; private set; }
	public event Action<LayoutControlData?>? SelectionChanged;
	public event Action<LayoutControlData?>? StateChanged;

	public Container()
	{
		Root = new LayoutControlData()
			{
				Type = typeof(VerticalPanel),
				Selectable = false,
			};
	}
	public void Select(LayoutControlData? selectedData)
	{
		if (Selection != selectedData)
		{
			Selection = selectedData;
			SelectionChanged?.Invoke(selectedData);
		}
	}
	public void ClearSelection()
	{
		Select(null);
	}

	public void DeleteSelectedComponent()
	{
		if (Selection != null)
		{
			Root.Remove(Selection);
			StateHasChanged();
		}
	}

	public void NotifyStateChanged(LayoutControlData data)
	{
		StateChanged?.Invoke(data);
	}
}
